import { pool } from "../src/db";

// üóëÔ∏è SUPPRIMER des produits
async function deleteProducts() {
  try {
    console.log("üóëÔ∏è Suppression des produits...\n");

    // 1Ô∏è‚É£ Afficher l'√©tat actuel
    console.log("1Ô∏è‚É£ √âTAT ACTUEL :");
    const beforeDelete = await pool.query(
      "SELECT id, name, brand FROM products ORDER BY id"
    );
    console.table(beforeDelete.rows);

    // 2Ô∏è‚É£ Supprimer un produit par ID
    console.log("\n2Ô∏è‚É£ SUPPRIMER LE PRODUIT ID 8 (Test Shoe) :");
    const deleteById = await pool.query(
      "DELETE FROM products WHERE id = $1 RETURNING *",
      [8]
    );

    if (deleteById.rows.length > 0) {
      console.log("‚úÖ Produit supprim√© :");
      console.table(deleteById.rows);
    } else {
      console.log("‚ùå Produit non trouv√©");
    }

    // 3Ô∏è‚É£ Supprimer par condition (prix trop √©lev√©)
    console.log("\n3Ô∏è‚É£ SUPPRIMER LES PRODUITS > 200‚Ç¨ :");
    const deleteExpensive = await pool.query(
      "DELETE FROM products WHERE price > $1 RETURNING *",
      [200]
    );

    if (deleteExpensive.rows.length > 0) {
      console.log("‚úÖ Produits supprim√©s :");
      console.table(deleteExpensive.rows);
    } else {
      console.log("‚ÑπÔ∏è Aucun produit > 200‚Ç¨ trouv√©");
    }

    // 4Ô∏è‚É£ Supprimer les doublons (m√™me nom ET m√™me marque)
    console.log("\n4Ô∏è‚É£ SUPPRIMER LES DOUBLONS :");
    const deleteDuplicates = await pool.query(`
      DELETE FROM products a USING products b 
      WHERE a.id > b.id 
      AND a.name = b.name 
      AND a.brand = b.brand
      RETURNING a.*
    `);

    if (deleteDuplicates.rows.length > 0) {
      console.log("‚úÖ Doublons supprim√©s :");
      console.table(deleteDuplicates.rows);
    } else {
      console.log("‚ÑπÔ∏è Aucun doublon trouv√©");
    }

    // 5Ô∏è‚É£ ATTENTION : Supprimer TOUS les produits (d√©commentez si besoin)
    /*
    console.log("\n‚ö†Ô∏è SUPPRIMER TOUS LES PRODUITS (DANGEREUX) :");
    const deleteAll = await pool.query("DELETE FROM products RETURNING *");
    console.log(`üóëÔ∏è ${deleteAll.rows.length} produits supprim√©s`);
    */

    // 6Ô∏è‚É£ √âtat final
    console.log("\n6Ô∏è‚É£ √âTAT FINAL :");
    const afterDelete = await pool.query("SELECT * FROM products ORDER BY id");
    console.table(afterDelete.rows);
    console.log(`üìä Total restant : ${afterDelete.rows.length} produits`);
  } catch (error) {
    console.error("‚ùå Erreur lors de la suppression :", error);
  } finally {
    await pool.end();
  }
}

deleteProducts();
