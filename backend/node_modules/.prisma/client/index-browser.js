
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BrandScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ColorScalarFieldEnum = {
  id: 'id',
  name: 'name',
  hex_code: 'hex_code',
  is_special: 'is_special'
};

exports.Prisma.GenderScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.GroundTypeScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  product_variant_id: 'product_variant_id',
  quantity: 'quantity',
  price_at_purchase: 'price_at_purchase'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  order_date: 'order_date',
  total_amount: 'total_amount',
  status: 'status',
  shipping_address: 'shipping_address',
  billing_address: 'billing_address',
  payment_method: 'payment_method'
};

exports.Prisma.ProductCategoryScalarFieldEnum = {
  product_id: 'product_id',
  category_id: 'category_id'
};

exports.Prisma.ProductGroundTypeScalarFieldEnum = {
  product_id: 'product_id',
  ground_type_id: 'ground_type_id'
};

exports.Prisma.ProductImageScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  color_id: 'color_id',
  image_type: 'image_type',
  sort_order: 'sort_order',
  highres_url: 'highres_url',
  lowres_url: 'lowres_url',
  thumbnail_url: 'thumbnail_url',
  original_filename: 'original_filename',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductVariantScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  sku: 'sku',
  stock: 'stock',
  is_active: 'is_active',
  price: 'price',
  color_id: 'color_id',
  size_id: 'size_id',
  created_at: 'created_at'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  sale: 'sale',
  name: 'name',
  base_price: 'base_price',
  brand_id: 'brand_id',
  weight: 'weight',
  type_id: 'type_id',
  gender_id: 'gender_id',
  stability: 'stability',
  drop: 'drop',
  rating: 'rating',
  one_star: 'one_star',
  two_star: 'two_star',
  three_star: 'three_star',
  four_star: 'four_star',
  five_star: 'five_star',
  review_count: 'review_count',
  is_recommended: 'is_recommended',
  news: 'news',
  sole_details: 'sole_details',
  upper: 'upper',
  material: 'material',
  care_instructions: 'care_instructions',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at',
  use_details: 'use_details',
  use_id: 'use_id',
  base_model: 'base_model'
};

exports.Prisma.SizeScalarFieldEnum = {
  id: 'id',
  eu_size: 'eu_size',
  uk_size: 'uk_size',
  us_size: 'us_size',
  foot_length_cm: 'foot_length_cm',
  gender_id: 'gender_id',
  foot_length_in: 'foot_length_in'
};

exports.Prisma.TypeScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  firstname: 'firstname',
  lastname: 'lastname',
  phone: 'phone',
  role: 'role',
  created_at: 'created_at'
};

exports.Prisma.UseScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Brand: 'Brand',
  Category: 'Category',
  Color: 'Color',
  Gender: 'Gender',
  GroundType: 'GroundType',
  OrderItem: 'OrderItem',
  Order: 'Order',
  ProductCategory: 'ProductCategory',
  ProductGroundType: 'ProductGroundType',
  ProductImage: 'ProductImage',
  ProductVariant: 'ProductVariant',
  Product: 'Product',
  Size: 'Size',
  Type: 'Type',
  User: 'User',
  Use: 'Use'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
